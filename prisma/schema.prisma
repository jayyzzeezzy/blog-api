// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DB")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  isAuthor  Boolean?  @default(false)
  createdAt DateTime  @default(now())
  blogs     Blog[]
  comments  Comment[]
  likes     Like[]

  @@map("user")
}

model Like {
  id          String   @id @default(cuid())
  ownership   User     @relation(fields: [ownershipId], references: [id])
  ownershipId Int
  username    String   @default("anonymous")
  Blog        Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  blogId      String
  createdAt   DateTime @default(now())

  @@map("like")
}

model Comment {
  id          String   @id @default(cuid())
  ownership   User     @relation(fields: [ownershipId], references: [id])
  ownershipId Int
  username    String   @default("anonymous")
  blog        Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  blogId      String
  body        String
  createdAt   DateTime @default(now())

  @@map("comment")
}

model Blog {
  id          String    @id @default(cuid())
  ownership   User      @relation(fields: [ownershipId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownershipId Int
  comments    Comment[]
  likes       Like[]
  isPublished Boolean   @default(false)
  title       String
  body        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("blog")
}
